buildscript {
    ext.kotlin_version = '1.3.21'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "de.undercouch.download" version "3.2.0"
    id 'com.github.johnrengelman.shadow' version '4.0.4'
}

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'maven'

group = 'de.hhu.stups'
archivesBaseName = 'alloy2b'
version = '1.0-SNAPSHOT'
mainClassName = 'de.hhu.stups.alloy2b.Alloy2BKt'

repositories {
    mavenCentral()
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
    test.java.srcDirs += 'src/test/kotlin/'
}

dependencies {
    compile files('alloy4.2.jar')
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    testCompile 'junit:junit:4.12'
}

task downloadAlloy {
    doFirst {
        download {
            src 'http://alloytools.org/download/alloy4.2_2015-02-22.jar'
            dest 'alloy4.2.jar'
            onlyIfNewer true
            overwrite false
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    dependsOn {
        downloadAlloy
    }
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName,
                'version': version,
        )
    }
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
}

shadowJar {
    configurations = [project.configurations.compile]
    zip64 true
    mergeServiceFiles()
    relocate('org.jetbrains.annotations','alloy2b.org.jetbrains.annotations')
    relocate('org.jetbrains.kotlin','alloy2b.org.jetbrains.kotlin')
    relocate('junit','alloy2b.junit')
    relocate('org.hamcrest','alloy2b.org.hamcrest')
    relocate('org.sat4j','alloy2b.org.sat4j')
    relocate('org.intellij','alloy2b.org.intellij')
    relocate('kotlin','alloy2b.kotlin')
    relocate('edu','alloy2b.edu')
    relocate('kodkod','alloy2b.kodkod')
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = 'alloy2b'
}

javadoc {
    failOnError = false
}


if (project.hasProperty('ossrhUsername') && project.hasProperty('ossrhPassword')
        && project.hasProperty("signing.keyId")) {

    println "Configuring deployment for ${project.name}"

    apply plugin: 'signing'

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
        manifest {
            attributes(
                    'Main-Class': mainClassName,
                    'version': version,
            )
        }
    }

    artifacts {
        archives sourcesJar, javadocJar, shadowJar
    }

    signing {
        sign configurations.archives
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment ->
                    signing.signPom(deployment)
                }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name = 'alloy2b'
                    packaging = 'jar'
                    description = 'The Parser for our translation from Alloy to B returning a Prolog Term.'
                    url = 'https://github.com/hhu-stups/alloy2b'

                    licenses {
                        license {
                            name = 'Eclipse Public License, Version 1.0'
                            url = 'http://www.eclipse.org/org/documents/epl-v10.html'
                        }
                    }

                    scm {
                        connection = 'scm:git:git://github.com/hhu-stups/alloy2b.git'
                        developerConnection = 'scm:git:git@github.com:hhu-stups/alloy2b.git'
                        url = 'https://github.com/hhu-stups/alloy2b'
                    }


                    developers {
                        developer {
                            id = 'JoshuaAtSTUPS'
                            name = 'Joshua Schmidt'
                            email = 'schmidt@cs.hhu.de'
                        }
                        developer {
                            id = 'wysiib'
                            name = 'Sebastian Krings'
                            email = 'krings@cs.hhu.de'
                        }
                    }
                }
            }
        }
    }
}

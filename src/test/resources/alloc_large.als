module alloc_large

abstract sig G7 {
  next: set G7, /* next is a relation */
  bij: one ADR /* bij is a total function */
}
one sig AUTRES_DF,BOITE_LEVIERS,DEFAUT_FE1,DEFAUT_FE2,DEFAUT_FE3,DEFAUT_LSTRA,DEFAUT_REM,DEFAUT_SUSP,DEFAUT_T,
DEFAUT_T1,DEF_NVAE,DERANGT_CAB,INDICES_AD_1,INDICES_AD_2,INDICES_AD_3,INDICES_AD_4,INDICES_AD_5,INSTA_BOGIE,
NON_DESSERAG1,NON_DESSERAG2,TRACT_FREIN,VENDEE,Z_ISOLE_1,Z_ISOLE_2,AUXILIAIRES_1,AUXILIAIRES_2,AVARIE_COMPR,
FUITE_CP1,FUITE_CP2,BA_LAMPES,LAMPE_LSFEP,LSFRDJ_C,LSFRDJ_M,LS_ALARME,LS_D,MANIP_0,UT_CAB,Vy_SECURITE,V_BA,
EB_BG_MOTEUR,EB_BG_PORT_A,EB_BG_PORT_B,AVARIE_PANTOS,DEFAUT_PANTOS,ISOLT_DJCR1,ISOLT_DJCR2,MONTEE_PANTOS,
OUVERTURE_DJM,PANTOS,PANTO_LOCALR1,PANTO_LOCALR2,R_AVARIEE_M,OBSERV_PANTOS,U_LIGNE_0,AVARIE_MEC_BG,AVARIE_SUSPEN,
BOITE_CHAUDE,DBC_12,DBC_122123,DBC_13,DBC_14,DBC_211,DF_MECANIQUE1,DF_MECANIQUE2,ISOL_DBC,ESSAI_FREIN1,ESSAI_FREIN2,
ESSAI_FREIN3,FREIN_SECOURS,FUITE_CG,FUITE_CG_1,FUITE_SCHARF,FUITE_VV_VA,INDICES_FREIN,SAFI,SAFI_FREIN,ANOMALIES_RS,
ANOMALIE_CAB,CIRCUL_LGV,CIRCUL_LGV1,CIRCUL_LGV2,CIRCUL_LGV3,CIRCUL_LGV4,COVIT,DECLEN_SIVER,ENTREE_LGV,ENTREE_LGV1,
ENTREE_LGV2,ENTREE_LGV3,ENTREE_LGV4,ESSAI_RADIO,ESSAI_VA,FRANCH_NF,INDIC_VITESSE,ISOL_KVB,KVB_1,KVB_2,KVB_3,KVB_4,
LIGNE_DS,RADIO,SECURITES,SORTIE_LGV,TEST_CAB,TEST_CAB1,TEST_CAB3,VA,VER_BL,DEPAN_DIFF1,ENTR_GUIDE,S7A_MANUEL_1,
S7A_MANUEL_2,S7A_MANUEL_3,VALID_ISO_Bg,ZPT_SECOURS,AVARIE_DJCR1,AVARIE_DJCR2,BM_ISOLES,BPDJ,DEFAUT25KV_R1,
DEFAUT25KV_R2,DEFAUT_BM,DEFAUT_DJ,DJC_HS,DJC_ISOLE,DJS_A,DJS_A1,DJS_A2,DJS_A4,DJS_A41,DJS_A5,DJS_A6,DJS_A7,
DJS_A8,DJS_A81,DJS_A9,DJS_AFP,DJS_AUX,DJS_B,DJS_BM,DJS_C,DJS_D,ENTREE_DJS,EQUI_SECURITE,G7Q300M,INCENDIE_A,
INCENDIE_B,INCENDIE_C,INDICES_DJS,MOT_HS_C,MOT_HS_MC_A,MOT_HS_MC_B,OUVERT_HHT,PONT_AUX,RETOUR_QM0,TRIPODE_A,
TRIPODE_B,U_LIGNE_DEVIE,COMMANDE_T,HHT,INDICES_TRACT,T_ROTOR extends G7 {}


abstract sig ADR {
  suiv: set ADR /* suiv is a relation */
}
one sig x14, x15, x16, x17, x18, x19, x1a, x1b, x1c, x1d, x1e, x1f, x20, x21, x22, x23, x24, x25, x26, x27, x28,
x29, x2a, x2b, x2c, x2d, x2e, x2f, x30, x31, x32, x33, x34, x35, x36, x37, x38, x39, x3a, x3b, x3c, x3d, x3e, x3f,
x40, x41, x42, x43, x44, x45, x46, x47, x48, x49, x4a, x4b, x4c, x4d, x4e, x4f, x50, x51, x52, x53, x54, x55, x56,
x57, x58, x59, x5a, x5b, x5c, x5d, x5e, x5f, x60, x61, x62, x63, x64, x65, x66, x67, x68, x69, x6a, x6b, x6c, x6d,
x6e, x6f, x70, x71, x72, x73, x74, x75, x76, x77, x78, x79, x7a, x7b, x7c, x7d, x7e, x7f, x80, x81, x82, x83, x84,
x85, x86, x87, x88, x89, x8a, x8b, x8c, x8d, x8e, x8f, x90, x91, x92, x93, x94, x95, x96, x97, x98, x99, x9a, x9b,
x9c, x9d, x9e, x9f, xa0, xa1, xa2, xa3, xa4, xa5, xa6, xa7, xa8, xa9, xaa, xab, xac, xad, xae, xaf, xb0, xb1, xb2,
xb3, xb4, xb5 extends ADR {}

pred bij_bijective {
  bij.~bij in iden /* injective */
  univ.bij = ADR /* surjective */
}

pred about_bij {
  all x:G7 {
    x.next.bij = x.bij.suiv /* bij[next[{x}]] = suiv[bij[{x}]] */
  }
}

pred solve {
  bij_bijective
  about_bij
}

assert cardinalities {
  #G7 = #ADR
}

fact enter {
  (ENTR_GUIDE->x14) in bij
}

fact nextdef {
  next =
  (AUTRES_DF->BOITE_LEVIERS) +
  (AUTRES_DF->DECLEN_SIVER) +
  (AUTRES_DF->VENDEE) +
  (AUTRES_DF->Z_ISOLE_1) +
  (DEFAUT_FE1->DEPAN_DIFF1) +
  (DEFAUT_FE1->S7A_MANUEL_1) +
  (DEFAUT_FE1->DEFAUT_FE2) +
  (DEFAUT_FE1->DEPAN_DIFF1) +
  (DEFAUT_FE2->S7A_MANUEL_1) +
  (DEFAUT_FE2->INDICES_AD_4) +
  (DEFAUT_FE3->S7A_MANUEL_1) +
  (DEFAUT_LSTRA->EB_BG_MOTEUR) +
  (DEFAUT_LSTRA->TRIPODE_A) +
  (DEFAUT_REM->INDICES_AD_3) +
  (DEFAUT_REM->DEF_NVAE) +
  (DEFAUT_SUSP->INDICES_AD_3) +
  (DEFAUT_T->DEFAUT_T1) +
  (DEFAUT_T1->DEFAUT_PANTOS) +
  (DEFAUT_T1->DJS_A7) +
  (DEFAUT_T1->INDICES_AD_5) +
  (DEFAUT_T1->COMMANDE_T) +
  (DEFAUT_T1->DJS_AFP) +
  (DEF_NVAE->VALID_ISO_Bg) +
  (DEF_NVAE->VALID_ISO_Bg) +
  (DEF_NVAE->DEFAUT_LSTRA) +
  (DEF_NVAE->INDICES_AD_3) +
  (DERANGT_CAB->ENTREE_LGV) +
  (DERANGT_CAB->CIRCUL_LGV) +
  (DERANGT_CAB->SORTIE_LGV) +
  (INDICES_AD_1->INDICES_AD_2) +
  (INDICES_AD_1->UT_CAB) +
  (INDICES_AD_1->DEFAUT_LSTRA) +
  (INDICES_AD_1->INCENDIE_A) +
  (INDICES_AD_2->INDICES_AD_3) +
  (INDICES_AD_2->DEFAUT_REM) +
  (INDICES_AD_2->INSTA_BOGIE) +
  (INDICES_AD_2->DEFAUT_SUSP) +
  (INDICES_AD_2->NON_DESSERAG1) +
  (INDICES_AD_3->DEFAUT_FE1) +
  (INDICES_AD_3->INDICES_AD_4) +
  (INDICES_AD_3->DEFAUT_FE3) +
  (INDICES_AD_4->INDICES_AD_5) +
  (INDICES_AD_4->DEFAUT_T) +
  (INDICES_AD_4->DJC_ISOLE) +
  (INDICES_AD_5->DEPAN_DIFF1) +
  (INDICES_AD_5->BA_LAMPES) +
  (INDICES_AD_5->PANTOS) +
  (INDICES_AD_5->AUXILIAIRES_1) +
  (INDICES_AD_5->TRACT_FREIN) +
  (INDICES_AD_5->SECURITES) +
  (INDICES_AD_5->INDICES_FREIN) +
  (INDICES_AD_5->DF_MECANIQUE1) +
  (INDICES_AD_5->SAFI) +
  (INDICES_AD_5->AUTRES_DF) +
  (INDICES_AD_5->T_ROTOR) +
  (INDICES_AD_5->U_LIGNE_0) +
  (INSTA_BOGIE->INDICES_AD_3) +
  (NON_DESSERAG1->NON_DESSERAG2) +
  (NON_DESSERAG1->ESSAI_FREIN1) +
  (NON_DESSERAG1->INDICES_AD_2) +
  (NON_DESSERAG2->FUITE_CG) +
  (NON_DESSERAG2->VALID_ISO_Bg) +
  (NON_DESSERAG2->VALID_ISO_Bg) +
  (TRACT_FREIN->T_ROTOR) +
  (Z_ISOLE_1->Z_ISOLE_2) +
  (Z_ISOLE_2->AVARIE_DJCR1) +
  (Z_ISOLE_2->DJS_A7) +
  (AUXILIAIRES_1->FUITE_CP1) +
  (AUXILIAIRES_1->AVARIE_COMPR) +
  (AUXILIAIRES_1->AUXILIAIRES_2) +
  (FUITE_CP1->VALID_ISO_Bg) +
  (FUITE_CP1->AVARIE_SUSPEN) +
  (FUITE_CP1->FUITE_CP2) +
  (BA_LAMPES->V_BA) +
  (BA_LAMPES->LAMPE_LSFEP) +
  (BA_LAMPES->LSFRDJ_M) +
  (BA_LAMPES->Vy_SECURITE) +
  (BA_LAMPES->LS_ALARME) +
  (BA_LAMPES->MANIP_0) +
  (BA_LAMPES->PANTO_LOCALR1) +
  (LAMPE_LSFEP->FREIN_SECOURS) +
  (LAMPE_LSFEP->FREIN_SECOURS) +
  (LAMPE_LSFEP->FREIN_SECOURS) +
  (LAMPE_LSFEP->FREIN_SECOURS) +
  (LSFRDJ_M->LSFRDJ_C) +
  (LS_ALARME->SAFI_FREIN) +
  (LS_D->DJS_A) +
  (LS_D->DJS_B) +
  (LS_D->DJS_AFP) +
  (LS_D->DEFAUT_BM) +
  (UT_CAB->LS_D) +
  (UT_CAB->DEFAUT_T) +
  (UT_CAB->COMMANDE_T) +
  (UT_CAB->INDICES_AD_2) +
  (EB_BG_MOTEUR->VALID_ISO_Bg) +
  (EB_BG_MOTEUR->VALID_ISO_Bg) +
  (EB_BG_MOTEUR->EB_BG_PORT_A) +
  (EB_BG_PORT_A->VALID_ISO_Bg) +
  (EB_BG_PORT_A->EB_BG_PORT_B) +
  (EB_BG_PORT_B->VALID_ISO_Bg) +
  (ISOLT_DJCR1->DEPAN_DIFF1) +
  (ISOLT_DJCR1->DEPAN_DIFF1) +
  (ISOLT_DJCR1->DEPAN_DIFF1) +
  (ISOLT_DJCR2->DEPAN_DIFF1) +
  (ISOLT_DJCR2->DEPAN_DIFF1) +
  (ISOLT_DJCR2->DEPAN_DIFF1) +
  (MONTEE_PANTOS->PANTO_LOCALR1) +
  (MONTEE_PANTOS->PANTO_LOCALR1) +
  (MONTEE_PANTOS->PANTO_LOCALR1) +
  (OUVERTURE_DJM->DEPAN_DIFF1) +
  (PANTOS->AVARIE_PANTOS) +
  (PANTOS->MONTEE_PANTOS) +
  (PANTOS->MONTEE_PANTOS) +
  (PANTO_LOCALR1->OUVERTURE_DJM) +
  (PANTO_LOCALR1->DEFAUT_PANTOS) +
  (PANTO_LOCALR1->ISOLT_DJCR1) +
  (PANTO_LOCALR1->MOT_HS_MC_A) +
  (PANTO_LOCALR1->BPDJ) +
  (PANTO_LOCALR1->R_AVARIEE_M) +
  (PANTO_LOCALR1->PANTO_LOCALR2) +
  (PANTO_LOCALR2->MOT_HS_MC_A) +
  (PANTO_LOCALR2->OUVERTURE_DJM) +
  (PANTO_LOCALR2->DEFAUT_PANTOS) +
  (PANTO_LOCALR2->ISOLT_DJCR2) +
  (PANTO_LOCALR2->BPDJ)+
  (PANTO_LOCALR2->R_AVARIEE_M) +
  (R_AVARIEE_M->DEPAN_DIFF1) +
  (OBSERV_PANTOS->PANTO_LOCALR1) +
  (OBSERV_PANTOS->PANTO_LOCALR1) +
  (OBSERV_PANTOS->AVARIE_PANTOS) +
  (U_LIGNE_0->OBSERV_PANTOS) +
  (U_LIGNE_0->PANTO_LOCALR1) +
  (U_LIGNE_0->VENDEE) +
  (AVARIE_MEC_BG->VALID_ISO_Bg) +
  (BOITE_CHAUDE->DBC_12) +
  (BOITE_CHAUDE->DBC_211) +
  (BOITE_CHAUDE->DBC_13) +
  (BOITE_CHAUDE->DBC_14) +
  (DBC_12->DBC_122123) +
  (DBC_122123->ISOL_DBC) +
  (DBC_13->DBC_211) +
  (DBC_13->DBC_12) +
  (DBC_13->DBC_122123) +
  (DBC_13->ISOL_DBC) +
  (DBC_13->DBC_211) +
  (DBC_14->DBC_211) +
  (DF_MECANIQUE1->DF_MECANIQUE2) +
  (DF_MECANIQUE1->AVARIE_MEC_BG) +
  (DF_MECANIQUE1->AVARIE_SUSPEN) +
  (DF_MECANIQUE1->BOITE_CHAUDE) +
  (DF_MECANIQUE2->BOITE_CHAUDE) +
  (DF_MECANIQUE2->VALID_ISO_Bg) +
  (ISOL_DBC->VALID_ISO_Bg) +
  (ESSAI_FREIN1->ESSAI_FREIN3) +
  (ESSAI_FREIN1->ESSAI_FREIN2) +
  (ESSAI_FREIN2->VALID_ISO_Bg) +
  (ESSAI_FREIN2->VALID_ISO_Bg) +
  (ESSAI_FREIN3->VALID_ISO_Bg) +
  (ESSAI_FREIN3->VALID_ISO_Bg) +
  (FUITE_CG->FUITE_VV_VA) +
  (FUITE_CG->FUITE_SCHARF) +
  (FUITE_CG->VALID_ISO_Bg) +
  (FUITE_CG->FUITE_CG_1) +
  (FUITE_CG->VALID_ISO_Bg) +
  (FUITE_CG_1->VALID_ISO_Bg) +
  (FUITE_CG_1->VALID_ISO_Bg) +
  (INDICES_FREIN->FUITE_CP1) +
  (INDICES_FREIN->AVARIE_COMPR) +
  (INDICES_FREIN->LAMPE_LSFEP) +
  (INDICES_FREIN->FUITE_CG) +
  (INDICES_FREIN->SAFI_FREIN) +
  (INDICES_FREIN->FREIN_SECOURS) +
  (INDICES_FREIN->ESSAI_FREIN1) +
  (INDICES_FREIN->VALID_ISO_Bg) +
  (INDICES_FREIN->VALID_ISO_Bg) +
  (SAFI->BA_LAMPES) +
  (SAFI->SAFI_FREIN) +
  (SAFI_FREIN->FREIN_SECOURS) +
  (ANOMALIES_RS->DJS_A1) +
  (ANOMALIES_RS->KVB_3) +
  (CIRCUL_LGV->ENTREE_LGV1) +
  (CIRCUL_LGV->INDIC_VITESSE) +
  (CIRCUL_LGV->DEPAN_DIFF1) +
  (CIRCUL_LGV->TEST_CAB3) +
  (CIRCUL_LGV->CIRCUL_LGV4) +
  (CIRCUL_LGV->CIRCUL_LGV1) +
  (CIRCUL_LGV1->DJS_A1) +
  (CIRCUL_LGV1->TEST_CAB3) +
  (CIRCUL_LGV1->TEST_CAB3) +
  (CIRCUL_LGV1->CIRCUL_LGV3) +
  (CIRCUL_LGV1->CIRCUL_LGV2) +
  (CIRCUL_LGV1->FRANCH_NF) +
  (CIRCUL_LGV2->VER_BL) +
  (CIRCUL_LGV2->VER_BL) +
  (CIRCUL_LGV3->LIGNE_DS) +
  (CIRCUL_LGV3->TEST_CAB3) +
  (CIRCUL_LGV3->TEST_CAB3) +
  (CIRCUL_LGV4->LIGNE_DS) +
  (CIRCUL_LGV4->LIGNE_DS) +
  (CIRCUL_LGV4->LIGNE_DS) +
  (CIRCUL_LGV4->CIRCUL_LGV2) +
  (ENTREE_LGV->ENTREE_LGV1) +
  (ENTREE_LGV->VER_BL) +
  (ENTREE_LGV->VER_BL) +
  (ENTREE_LGV->TEST_CAB3) +
  (ENTREE_LGV1->TEST_CAB3) +
  (ENTREE_LGV1->VER_BL) +
  (ENTREE_LGV1->ENTREE_LGV3) +
  (ENTREE_LGV1->ENTREE_LGV4) +
  (ENTREE_LGV2->VER_BL) +
  (ENTREE_LGV2->VER_BL) +
  (ENTREE_LGV2->TEST_CAB3) +
  (ENTREE_LGV2->TEST_CAB3) +
  (ENTREE_LGV2->VER_BL) +
  (ENTREE_LGV3->DEPAN_DIFF1) +
  (ENTREE_LGV3->DEPAN_DIFF1) +
  (ENTREE_LGV3->LIGNE_DS) +
  (ENTREE_LGV3->DEPAN_DIFF1) +
  (ENTREE_LGV3->ENTREE_LGV4) +
  (ENTREE_LGV4->LIGNE_DS) +
  (ENTREE_LGV4->TEST_CAB3) +
  (ENTREE_LGV4->ENTREE_LGV2) +
  (KVB_1->KVB_4) +
  (KVB_1->KVB_3) +
  (KVB_1->FRANCH_NF) +
  (KVB_1->ISOL_KVB) +
  (KVB_1->VER_BL) +
  (KVB_1->KVB_2) +
  (KVB_2->ISOL_KVB) +
  (KVB_3->KVB_4) +
  (KVB_3->ISOL_KVB) +
  (KVB_4->ISOL_KVB) +
  (LIGNE_DS->VER_BL) +
  (SECURITES->VA) +
  (SECURITES->INDIC_VITESSE) +
  (SECURITES->TEST_CAB) +
  (SECURITES->ENTREE_LGV) +
  (SECURITES->CIRCUL_LGV) +
  (SECURITES->SORTIE_LGV) +
  (SECURITES->KVB_1) +
  (SECURITES->ESSAI_VA) +
  (SECURITES->FUITE_VV_VA) +
  (SECURITES->ANOMALIES_RS) +
  (SECURITES->RADIO) +
  (SECURITES->ESSAI_RADIO) +
  (SORTIE_LGV->LIGNE_DS) +
  (SORTIE_LGV->LIGNE_DS) +
  (TEST_CAB->TEST_CAB1) +
  (TEST_CAB->COVIT) +
  (TEST_CAB->ANOMALIE_CAB) +
  (TEST_CAB->SORTIE_LGV) +
  (TEST_CAB3->DEPAN_DIFF1) +
  (TEST_CAB3->VER_BL) +
  (VA->INDIC_VITESSE) +
  (VA->DJS_A2) +
  (ENTR_GUIDE->INDICES_AD_1) +
  (ENTR_GUIDE->INDICES_TRACT) +
  (ENTR_GUIDE->ENTREE_DJS) +
  (S7A_MANUEL_1->S7A_MANUEL_2) +
  (S7A_MANUEL_1->DJS_A7) +
  (S7A_MANUEL_2->S7A_MANUEL_3) +
  (AVARIE_DJCR1->DEPAN_DIFF1) +
  (AVARIE_DJCR2->DEPAN_DIFF1) +
  (BM_ISOLES->DJS_A41) +
  (BM_ISOLES->DEFAUT_FE3) +
  (DEFAUT25KV_R1->DEPAN_DIFF1) +
  (DEFAUT25KV_R1->BPDJ) +
  (DEFAUT25KV_R1->DEPAN_DIFF1) +
  (DEFAUT25KV_R2->DEPAN_DIFF1) +
  (DEFAUT25KV_R2->BPDJ) +
  (DEFAUT25KV_R2->DEPAN_DIFF1) +
  (DEFAUT_BM->DJS_BM) +
  (DEFAUT_BM->DEFAUT_FE1) +
  (DEFAUT_DJ->DEPAN_DIFF1) +
  (DJC_HS->AVARIE_DJCR1) +
  (DJC_HS->AVARIE_DJCR2) +
  (DJC_ISOLE->DEPAN_DIFF1) +
  (DJC_ISOLE->DEFAUT_PANTOS) +
  (DJS_A->DJS_BM) +
  (DJS_A->DJS_AUX) +
  (DJS_A->DJS_A9) +
  (DJS_A->DJS_A6) +
  (DJS_A->DJS_C) +
  (DJS_A->G7Q300M) +
  (DJS_A->DJS_A7) +
  (DJS_A->DJS_A8) +
  (DJS_A->DJS_AUX) +
  (DJS_A->DJC_ISOLE) +
  (DJS_A->RETOUR_QM0) +
  (DJS_A->DJS_A5) +
  (DJS_A->DJS_A4) +
  (DJS_A->KVB_3) +
  (DJS_A->DJS_A2) +
  (DJS_A->DJS_A1) +
  (DJS_A1->ANOMALIES_RS) +
  (DJS_A2->VA) +
  (DJS_A4->FRANCH_NF) +
  (DJS_A4->DERANGT_CAB) +
  (DJS_A4->DJS_A41) +
  (DJS_A4->DERANGT_CAB) +
  (DJS_A41->DEPAN_DIFF1) +
  (DJS_A41->DEPAN_DIFF1) +
  (DJS_A41->LIGNE_DS) +
  (DJS_A41->DERANGT_CAB) +
  (DJS_A41->DEPAN_DIFF1) +
  (DJS_A41->KVB_3) +
  (DJS_A5->LIGNE_DS) +
  (DJS_A5->DERANGT_CAB) +
  (DJS_A5->DEPAN_DIFF1) +
  (DJS_A6->DEPAN_DIFF1) +
  (DJS_A6->EQUI_SECURITE) +
  (DJS_A6->DJC_HS) +
  (DJS_A7->DEFAUT25KV_R1) +
  (DJS_A7->DEFAUT25KV_R2) +
  (DJS_A7->ZPT_SECOURS) +
  (DJS_A7->DEPAN_DIFF1) +
  (DJS_A7->OUVERT_HHT) +
  (DJS_A7->DEPAN_DIFF1) +
  (DJS_A7->DEPAN_DIFF1) +
  (DJS_A7->ZPT_SECOURS) +
  (DJS_A7->HHT) +
  (DJS_A8->DEPAN_DIFF1) +
  (DJS_A8->EQUI_SECURITE) +
  (DJS_A8->DJC_HS) +
  (DJS_A8->DJS_A81) +
  (DJS_A8->DEPAN_DIFF1) +
  (DJS_A81->DJC_HS) +
  (DJS_A9->DJS_A41) +
  (DJS_A9->DJS_AUX) +
  (DJS_A9->DJS_AUX) +
  (DJS_AFP->DJS_AUX) +
  (DJS_AFP->DJC_ISOLE) +
  (DJS_AFP->DJS_BM) +
  (DJS_AFP->DJS_AUX) +
  (DJS_AFP->DJC_ISOLE) +
  (DJS_AFP->DJS_D) +
  (DJS_AFP->BM_ISOLES) +
  (DJS_AFP->DJC_ISOLE) +
  (DJS_AUX->BPDJ) +
  (DJS_B->RETOUR_QM0) +
  (DJS_B->DJS_A7) +
  (DJS_B->PONT_AUX) +
  (DJS_B->DJS_AUX) +
  (DJS_B->DJC_HS) +
  (DJS_B->G7Q300M) +
  (DJS_BM->S7A_MANUEL_1) +
  (DJS_BM->DEFAUT_FE1) +
  (DJS_C->DEPAN_DIFF1) +
  (DJS_C->DJC_ISOLE) +
  (DJS_D->DEFAUT_DJ) +
  (DJS_D->DJC_ISOLE) +
  (DJS_D->DJS_A8) +
  (DJS_D->AVARIE_DJCR1) +
  (DJS_D->AVARIE_DJCR2) +
  (DJS_D->DJS_BM) +
  (ENTREE_DJS->INDICES_DJS) +
  (ENTREE_DJS->INCENDIE_A) +
  (EQUI_SECURITE->DJS_A1) +
  (EQUI_SECURITE->DJS_A2) +
  (EQUI_SECURITE->KVB_3) +
  (G7Q300M->DEFAUT_FE1) +
  (G7Q300M->S7A_MANUEL_1) +
  (G7Q300M->DJS_A7) +
  (INCENDIE_A->INCENDIE_C) +
  (INCENDIE_A->INCENDIE_B) +
  (INDICES_DJS->DJS_A) +
  (INDICES_DJS->DJS_B) +
  (INDICES_DJS->DJS_AFP) +
  (INDICES_DJS->TRIPODE_A) +
  (INDICES_DJS->UT_CAB) +
  (INDICES_DJS->INCENDIE_A) +
  (INDICES_DJS->DEFAUT_BM) +
  (INDICES_DJS->DJS_AFP) +
  (INDICES_DJS->MOT_HS_MC_A) +
  (INDICES_DJS->MOT_HS_C) +
  (INDICES_DJS->U_LIGNE_DEVIE) +
  (MOT_HS_C->DEPAN_DIFF1) +
  (MOT_HS_MC_A->DEPAN_DIFF1) +
  (MOT_HS_MC_A->MOT_HS_MC_B) +
  (PONT_AUX->BPDJ) +
  (PONT_AUX->DEPAN_DIFF1) +
  (RETOUR_QM0->DEPAN_DIFF1) +
  (TRIPODE_A->VALID_ISO_Bg) +
  (TRIPODE_A->TRIPODE_B) +
  (TRIPODE_B->VALID_ISO_Bg) +
  (TRIPODE_B->EB_BG_MOTEUR) +
  (U_LIGNE_DEVIE->DEFAUT_PANTOS) +
  (U_LIGNE_DEVIE->U_LIGNE_0) +
  (U_LIGNE_DEVIE->PANTO_LOCALR1) +
  (U_LIGNE_DEVIE->DJC_HS) +
  (U_LIGNE_DEVIE->PANTO_LOCALR1) +
  (COMMANDE_T->T_ROTOR) +
  (HHT->DEPAN_DIFF1) +
  (HHT->DEPAN_DIFF1) +
  (INDICES_TRACT->T_ROTOR) +
  (INDICES_TRACT->DEFAUT_T) +
  (INDICES_TRACT->UT_CAB) +
  (INDICES_TRACT->COMMANDE_T)
}

fact suivdef {
  suiv =
  (x14->x5d) +
  (x14->x46) +
  (x14->x1b) +
  (x16->x25) +
  (x16->x17) +
  (x16->x25) +
  (x17->x18) +
  (x1b->x3f) +
  (x1b->x1c) +
  (x1c->x1e) +
  (x1c->x27) +
  (x1c->x2f) +
  (x1c->x63) +
  (x1c->x3f) +
  (x1c->x30) +
  (x1c->x37) +
  (x1c->x37) +
  (x1c->x30) +
  (x1c->x2f) +
  (x1c->x27) +
  (x1c->x1e) +
  (x1c->x2b) +
  (x1c->x1d) +
  (x1c->x29) +
  (x1d->x6c) +
  (x1d->x70) +
  (x1d->x70) +
  (x1d->x74) +
  (x1d->x6c) +
  (x1d->x3c) +
  (x1d->x74) +
  (x1d->x74) +
  (x1e->x31) +
  (x1e->x31) +
  (x1e->x39) +
  (x1e->x42) +
  (x1e->x3a) +
  (x1e->x3a) +
  (x1e->x45) +
  (x1e->x25) +
  (x1e->x24) +
  (x1e->x28) +
  (x1e->x3b) +
  (x1e->x26) +
  (x1e->x39) +
  (x1e->x23) +
  (x1e->x21) +
  (x1e->xa6) +
  (x1e->x20) +
  (x1e->x1f) +
  (x1f->xa1) +
  (x1f->xa1) +
  (x1f->xa1) +
  (x1f->xa1) +
  (x20->x9f) +
  (x20->x9f) +
  (x20->x9f) +
  (x20->x9f) +
  (x20->x9f) +
  (x21->x57) +
  (x21->x22) +
  (x21->xb3) +
  (x21->x57) +
  (x22->x15) +
  (x22->x57) +
  (x22->x15) +
  (x22->xb5) +
  (x22->x57) +
  (x22->x15) +
  (x22->xa6) +
  (x23->xb5) +
  (x23->x57) +
  (x23->x57) +
  (x23->x15) +
  (x23->xb5) +
  (x23->x57) +
  (x24->x3c) +
  (x24->x15) +
  (x24->x36) +
  (x24->x3c) +
  (x25->x32) +
  (x25->x33) +
  (x25->x1a) +
  (x25->x1a) +
  (x25->x15) +
  (x25->x15) +
  (x25->x34) +
  (x25->x15) +
  (x25->x34) +
  (x25->x15) +
  (x25->x33) +
  (x25->x32) +
  (x25->x48) +
  (x26->x15) +
  (x26->x3c) +
  (x26->x3c) +
  (x26->x36) +
  (x26->x43) +
  (x26->x3c) +
  (x26->x3c) +
  (x26->x43) +
  (x26->x3c) +
  (x26->x3c) +
  (x26->x15) +
  (x26->x15) +
  (x26->x15) +
  (x27->x3a) +
  (x27->x3a) +
  (x27->x25) +
  (x27->x45) +
  (x27->x3d) +
  (x27->x3d) +
  (x27->x39) +
  (x27->x3c) +
  (x28->x3b) +
  (x28->x15) +
  (x29->x15) +
  (x29->x2a) +
  (x29->x15) +
  (x29->x15) +
  (x29->x15) +
  (x2b->x15) +
  (x2c->x15) +
  (x2c->x15) +
  (x2c->x15) +
  (x2d->x15) +
  (x2d->x15) +
  (x2e->x15) +
  (x2e->x15) +
  (x2f->x39) +
  (x2f->x39) +
  (x2f->x3b) +
  (x2f->x31) +
  (x2f->x31) +
  (x2f->x3e) +
  (x2f->x3b) +
  (x2f->x39) +
  (x2f->x39) +
  (x2f->x3b) +
  (x2f->x35) +
  (x30->x31) +
  (x30->x31) +
  (x30->x4f) +
  (x30->x31) +
  (x31->x16) +
  (x31->x4f) +
  (x31->x4f) +
  (x32->x44) +
  (x32->x15) +
  (x32->x44) +
  (x32->x15) +
  (x33->x44) +
  (x33->x15) +
  (x33->x44) +
  (x33->x15) +
  (x35->x3b) +
  (x35->x26) +
  (x35->x2c) +
  (x35->x26) +
  (x35->x2d) +
  (x35->x26) +
  (x35->x26) +
  (x35->x2e) +
  (x35->x26) +
  (x35->x31) +
  (x36->x1f) +
  (x36->x20) +
  (x36->xa6) +
  (x37->x38) +
  (x37->x19) +
  (x37->x19) +
  (x38->x19) +
  (x38->x19) +
  (x38->x7d) +
  (x39->x44) +
  (x39->x44) +
  (x3a->x15) +
  (x3a->x15) +
  (x3a->x15) +
  (x3a->x15) +
  (x3a->x15) +
  (x3b->x74) +
  (x3b->x15) +
  (x3c->x2d) +
  (x3c->x2e) +
  (x3d->x44) +
  (x3d->x15) +
  (x3e->x22) +
  (x3e->x51) +
  (x3e->x51) +
  (x3f->x40) +
  (x3f->x41) +
  (x3f->x41) +
  (x3f->x41) +
  (x42->x39) +
  (x42->x22) +
  (x42->x39) +
  (x43->x3c) +
  (x45->x25) +
  (x45->x4f) +
  (x45->x16) +
  (x46->x49) +
  (x46->x4d) +
  (x46->x63) +
  (x46->x47) +
  (x47->x49) +
  (x48->x15) +
  (x48->x15) +
  (x4a->x5f) +
  (x4a->x5f) +
  (x4b->x5e) +
  (x4b->x4c) +
  (x4b->x91) +
  (x4b->x4c) +
  (x4c->x8c) +
  (x4c->x19) +
  (x4c->x19) +
  (x4d->x4e) +
  (x4e->x74) +
  (x4e->x2f) +
  (x4e->x2f) +
  (x4e->x61) +
  (x4e->x25) +
  (x4e->x61) +
  (x4e->x47) +
  (x4f->x50) +
  (x4f->x15) +
  (x4f->x16) +
  (x4f->x15) +
  (x50->x16) +
  (x50->x16) +
  (x50->x60) +
  (x51->x16) +
  (x52->x5f) +
  (x52->x5b) +
  (x52->x5f) +
  (x52->x5f) +
  (x53->x37) +
  (x53->x37) +
  (x53->x7d) +
  (x53->x7d) +
  (x54->x56) +
  (x54->x5c) +
  (x54->x9d) +
  (x54->x59) +
  (x55->x49) +
  (x57->xa9) +
  (x57->xae) +
  (x57->x9a) +
  (x58->x5f) +
  (x58->x5f) +
  (x59->x5a) +
  (x5a->x2d) +
  (x5a->x25) +
  (x5b->x5f) +
  (x5b->x53) +
  (x5b->x19) +
  (x5b->x19) +
  (x5d->x3f) +
  (x5d->x53) +
  (x5d->x5e) +
  (x5d->x63) +
  (x5e->x4b) +
  (x5e->x58) +
  (x5e->x5f) +
  (x5e->x52) +
  (x5e->x4a) +
  (x5f->x4f) +
  (x5f->x60) +
  (x5f->x51) +
  (x5f->x51) +
  (x60->x61) +
  (x60->x4d) +
  (x60->x61) +
  (x60->x61) +
  (x60->x4d) +
  (x60->x3b) +
  (x60->x61) +
  (x60->x4d) +
  (x61->x6c) +
  (x61->x49) +
  (x61->x15) +
  (x61->x62) +
  (x61->x6e) +
  (x61->x78) +
  (x61->x55) +
  (x61->x96) +
  (x61->x8b) +
  (x61->x80) +
  (x61->x94) +
  (x61->x54) +
  (x62->x66) +
  (x62->x67) +
  (x62->x69) +
  (x62->x65) +
  (x62->x68) +
  (x62->x64) +
  (x62->x70) +
  (x62->x70) +
  (x63->x6b) +
  (x63->x4d) +
  (x63->x47) +
  (x63->x5e) +
  (x67->x8d) +
  (x67->x8d) +
  (x67->x8d) +
  (x67->x8d) +
  (x67->x8d) +
  (x67->x8d) +
  (x67->x8d) +
  (x67->x8d) +
  (x68->x95) +
  (x69->x6a) +
  (x6b->x30) +
  (x6b->x1e) +
  (x6b->x27) +
  (x6b->x2f) +
  (x6b->x2f) +
  (x6b->x30) +
  (x6c->x70) +
  (x6c->x6d) +
  (x6c->x70) +
  (x6c->x70) +
  (x6c->x5c) +
  (x6d->x70) +
  (x6d->x77) +
  (x6d->x70) +
  (x6e->x77) +
  (x6e->x6f) +
  (x6e->x6f) +
  (x6f->x70) +
  (x6f->x70) +
  (x6f->x70) +
  (x70->x71) +
  (x70->x75) +
  (x70->x44) +
  (x70->x29) +
  (x70->x76) +
  (x70->x74) +
  (x70->x72) +
  (x71->x75) +
  (x71->x44) +
  (x71->x29) +
  (x71->x76) +
  (x71->x74) +
  (x71->x73) +
  (x72->x15) +
  (x72->x15) +
  (x72->x15) +
  (x73->x15) +
  (x73->x15) +
  (x73->x15) +
  (x75->x15) +
  (x75->x15) +
  (x76->x15) +
  (x78->x7a) +
  (x78->x79) +
  (x78->x7b) +
  (x78->x7a) +
  (x7b->x83) +
  (x7b->x7c) +
  (x7b->x19) +
  (x7d->x7e) +
  (x7d->x19) +
  (x7d->x19) +
  (x7e->x7f) +
  (x7e->x7f) +
  (x7e->x19) +
  (x7e->x7f) +
  (x7f->x19) +
  (x7f->x19) +
  (x80->x81) +
  (x80->x83) +
  (x80->x84) +
  (x80->x82) +
  (x80->x82) +
  (x80->x82) +
  (x80->x82) +
  (x81->x19) +
  (x82->x84) +
  (x82->x19) +
  (x84->x85) +
  (x84->x89) +
  (x84->x86) +
  (x84->x87) +
  (x84->x85) +
  (x85->x88) +
  (x86->x89) +
  (x86->x85) +
  (x86->x89) +
  (x86->x88) +
  (x86->x8a) +
  (x87->x89) +
  (x88->x8a) +
  (x88->x8a) +
  (x8a->x19) +
  (x8a->x19) +
  (x8b->x67) +
  (x8b->x91) +
  (x8b->x8d) +
  (x8b->x95) +
  (x8b->x7b) +
  (x8b->x7a) +
  (x8b->x67) +
  (x8b->x8c) +
  (x8b->x95) +
  (x8b->x8d) +
  (x8b->x8d) +
  (x8b->x67) +
  (x8b->x95) +
  (x8b->x19) +
  (x8b->x19) +
  (x8b->x19) +
  (x8c->x8e) +
  (x8c->x8f) +
  (x8c->x19) +
  (x8c->x90) +
  (x8c->x90) +
  (x8c->x19) +
  (x8c->x19) +
  (x90->x19) +
  (x90->x19) +
  (x90->x19) +
  (x90->x19) +
  (x90->x19) +
  (x91->x93) +
  (x91->x92) +
  (x92->x19) +
  (x92->x19) +
  (x93->x19) +
  (x93->x19) +
  (x94->x95) +
  (x94->x62) +
  (x95->x8d) +
  (x96->x9f) +
  (x96->xa0) +
  (x96->xa4) +
  (x96->x97) +
  (x96->x8e) +
  (x96->xa1) +
  (x96->xa2) +
  (x96->x9b) +
  (x96->x98) +
  (x96->xa9) +
  (x96->xae) +
  (x96->x9a) +
  (x98->x99) +
  (x98->x9e) +
  (x98->x9c) +
  (x98->x9a) +
  (x9a->xb5) +
  (x9a->xb5) +
  (x9f->x20) +
  (x9f->xa0) +
  (xa1->x1f) +
  (xa1->xa6) +
  (xa3->x15) +
  (xa3->xa8) +
  (xa4->xa6) +
  (xa4->xa7) +
  (xa4->xb3) +
  (xa4->xa8) +
  (xa4->xa5) +
  (xa4->xb4) +
  (xa4->xa7) +
  (xa4->xa7) +
  (xa4->xb4) +
  (xa4->xb4) +
  (xa4->xa5) +
  (xa5->xb4) +
  (xa5->xb4) +
  (xa5->xb4) +
  (xa5->xb4) +
  (xa6->xa7) +
  (xa6->xa7) +
  (xa6->xb4) +
  (xa6->xb4) +
  (xa6->xa7) +
  (xa6->xb4) +
  (xa7->xb4) +
  (xa7->xb4) +
  (xa7->xb4) +
  (xa9->xaa) +
  (xa9->xa8) +
  (xa9->xa8) +
  (xa9->xa3) +
  (xaa->xac) +
  (xaa->xac) +
  (xaa->xad) +
  (xaa->xa3) +
  (xaa->xa8) +
  (xab->xa3) +
  (xab->xa3) +
  (xab->xa8) +
  (xab->xa3) +
  (xab->xa8) +
  (xab->xa8) +
  (xac->x15) +
  (xac->x15) +
  (xac->xb5) +
  (xac->x15) +
  (xac->xad) +
  (xac->xb5) +
  (xad->xa3) +
  (xad->xab) +
  (xad->xb5) +
  (xad->xa3) +
  (xad->xa3) +
  (xad->xb5) +
  (xae->xaa) +
  (xae->xb2) +
  (xae->xaf) +
  (xae->xa0) +
  (xae->x15) +
  (xae->xa3) +
  (xae->xa3) +
  (xaf->xb0) +
  (xaf->xb3) +
  (xaf->x1f) +
  (xaf->xb1) +
  (xaf->xa3) +
  (xaf->xa3) +
  (xb0->xa8) +
  (xb0->xa8) +
  (xb1->xa3) +
  (xb1->xb5) +
  (xb1->xa3) +
  (xb1->xb5) +
  (xb1->xa3) +
  (xb2->xb5) +
  (xb2->xb5) +
  (xb2->xb5) +
  (xb2->xb0) +
  (xb5->xa8)
}

run solve

/*
 Solver=minisat(jni) Bitwidth=0 MaxSeq=0 SkolemDepth=1 Symmetry=20
   2384783 vars. 26940 primary vars. 4883929 clauses. 10082ms.
   . found. Predicate is consistent. 1120ms.

ProB takes about 1-2 seconds to solve the original B machine.


Alloy also works without the fact enter:
fact enter {
  (ENTR_GUIDE->x14) in bij
}

   Solver=minisat(jni) Bitwidth=0 MaxSeq=0 SkolemDepth=1 Symmetry=20
   2384783 vars. 26940 primary vars. 4883928 clauses. 10760ms.
   . found. Predicate is consistent. 1096ms.

Here, however, ProB has problems.
*/
